{"version":3,"sources":["people.jpg","navy-logo.png","contexts/CategoriesContext.jsx","contexts/CategoriesContextProvider.jsx","components/CategoryEvent.jsx","components/CategoryPage.jsx","components/CategoryCard.js","components/CategoryList.js","components/Register.jsx","components/Login.jsx","components/UpdateEvent.jsx","components/DashBoardEvent.jsx","components/AddEvent.jsx","components/DashBoard.jsx","components/VideoChat.jsx","components/Home.jsx","components/UpcomingEventsCard.jsx","components/UpcomingEvents.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","CategoriesContext","createContext","CategoriesContextProvider","children","useState","categoryDescriptions","value","Provider","CategoryEvent","event","icon","setIcon","rsvpInfo","userId","eventId","id","Box","responsive","direction","align","alignSelf","background","border","color","size","round","header","pad","margin","top","left","width","Grid","fill","rows","columns","areas","name","start","end","gridArea","Heading","textAlign","level","title","Text","vertical","Date","date","toLocaleString","description","alignContent","flex","justify","Button","label","primary","onClick","fetch","method","headers","body","JSON","stringify","then","Checkmark","catch","err","console","log","CategoryPage","categoryId","useParams","useContext","categoryEvents","setCategoryEvents","categoryName","setCategoryName","useEffect","a","response","json","getEventsByCategory","className","text-align","gap","map","CategoryCard","props","window","location","replace","category","CategoryList","categories","setCategories","data","getCategories","icons","Group","Gamepad","Spa","Bike","Cafeteria","Catalog","bottom","i","key","Register","Form","action","FormField","required","TextInput","type","placeholder","Anchor","href","Login","UpdateEvent","setEvent","setTitle","setDescription","categoryData","setCategoryData","setCategoryId","stringDate","slice","length","now","setDate","category_id","getEventById","Modal","show","onHide","handleClose","Header","closeButton","Body","controlId","Label","Control","onChange","e","target","as","selected","defaultValue","preventDefault","eventInfo","reload","DashBoardEvent","setShow","getCategoryName","to","AddEvent","DashBoard","events","isLoading","setIsLoading","res","newEvents","Spinner","animation","role","Stack","Video","styled","video","SpeakerVideo","VideoChat","UserVideo","PartnerVideo","stream","setStream","isPartnerHere","setIsPartnerHere","roomId","userVideo","useRef","partnerVideo","socket","peer","current","io","emit","on","navigator","mediaDevices","getUserMedia","audio","SimplePeer","initiator","trickle","srcObject","partnerStream","signal","playsInline","muted","ref","autoPlay","Home","src","People","alt","User","Search","Chat","UpcomingEventsCard","rsvpId","event_id","UpcomingEvents","upcomingEvents","setUpComingEvents","setErr","App","Image","Logo","fit","document","cookie","Nav","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","Grommet","theme","global","font","family","height","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,4NCI5BC,EAFWC,wBAAc,ICsBzBC,EArBmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACMC,mBAAS,CAC/D,mHACA,yFACA,uGACA,qIACA,kHACA,2GAPgD,mBAC3CC,EAD2C,KAU5CC,GAV4C,KAUpC,CACZD,yBAGF,OACE,kBAAC,EAAkBE,SAAnB,CAA4BD,MAAOA,GAChCH,I,+ECgFQK,EA/FO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACXL,mBAAS,MADE,mBAC5BM,EAD4B,KACtBC,EADsB,KAG7BC,EAAW,CACfC,OAAQJ,EAAMI,OACdC,QAASL,EAAMM,IAiBjB,OACE,kBAACC,EAAA,EAAD,CACEC,WAAW,OACXC,UAAU,SACVC,MAAM,SACNC,UAAU,SACVC,WAAW,UACXC,OAAQ,CAAEC,MAAO,UAAWC,KAAM,UAClCC,MAAM,SACNC,OAAO,cACPC,IAAI,SACJC,OAAQ,CAAEC,IAAK,MAAOC,KAAM,QAC5BC,MAAM,OAEN,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLhB,WAAW,OACXiB,KAAM,CAAC,UAAW,SAAU,UAAW,QACvCC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,MAAO,CACL,CAAEC,KAAM,SAAUC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAC1C,CAAEF,KAAM,OAAQC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACxC,CAAEF,KAAM,OAAQC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACxC,CAAEF,KAAM,UAAWC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,MAG7C,kBAACvB,EAAA,EAAD,CAAKC,WAAW,OAAOuB,SAAS,UAC9B,kBAACC,EAAA,EAAD,CACErB,UAAU,QACVsB,UAAU,QACVC,MAAM,IACN1B,WAAW,OACXW,OAAQ,CAAEC,IAAK,UAEdpB,EAAMmC,QAGX,kBAAC5B,EAAA,EAAD,CAAKC,WAAW,OAAOuB,SAAS,QAC9B,kBAACK,EAAA,EAAD,CAAMrB,KAAK,QAAQkB,UAAU,SAASd,OAAQ,CAAEkB,SAAU,SACvD,IAAIC,KAAKtC,EAAMuC,MAAMC,mBAG1B,kBAACjC,EAAA,EAAD,CAAKC,WAAW,OAAOuB,SAAS,QAC9B,kBAACK,EAAA,EAAD,CAAMrB,KAAK,SAASI,OAAQ,CAAEkB,SAAU,QAAUJ,UAAU,UACzDjC,EAAMyC,cAGX,kBAAClC,EAAA,EAAD,CACEwB,SAAS,UACTZ,OAAQ,CAAEC,IAAK,SACfsB,aAAa,SACbhC,MAAM,SACNC,UAAU,SACVgC,KAAK,OACLlC,UAAU,MACVmC,QAAQ,UAER,kBAACrC,EAAA,EAAD,CAAKC,WAAW,QACd,kBAACqC,EAAA,EAAD,CACErC,WAAW,OACXsC,MAAM,OACN7C,KAAMA,EACN8C,SAAO,EACPC,QA7EI,WACdC,MAAM,YAAa,CACjBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUnD,KAEpBoD,MAAK,WACJrD,EAAQ,kBAACsD,EAAA,EAAD,UAETC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAoEN5C,MAAM,iBClBL+C,EAlEM,WAAO,IAClBC,EAAeC,cAAfD,WACAlE,EAAyBoE,qBAAWzE,GAApCK,qBAFiB,EAGmBD,mBAAS,IAH5B,mBAGlBsE,EAHkB,KAGFC,EAHE,OAIevE,mBAAS,IAJxB,mBAIlBwE,EAJkB,KAIJC,EAJI,KAiBzB,OAXAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBrB,MAAM,mBAAD,OAAoBa,IADlD,cACQS,EADR,gBAEqBA,EAASC,OAF9B,OAEQA,EAFR,OAGEN,EAAkBM,GAClBb,QAAQC,IAAIY,GACZJ,EAAgBI,EAAK,GAAG5C,MAL1B,4CADc,uBAAC,WAAD,wBAQd6C,KACC,IAGD,kBAAClE,EAAA,EAAD,CAAKC,WAAW,QACd,kBAACD,EAAA,EAAD,CAAKC,WAAW,QACd,kBAACwB,EAAA,EAAD,CAASlB,MAAM,UAAU4D,UAAU,iBAAiBC,aAAW,UAC5DR,GAEe,YAAjBA,EACC,kBAAC/B,EAAA,EAAD,CAAMrB,KAAK,QAAQkB,UAAU,UAC1BrC,EAAqB,IAEL,WAAjBuE,EACF,kBAAC/B,EAAA,EAAD,CAAMrB,KAAK,QAAQkB,UAAU,UAC1BrC,EAAqB,IAEL,WAAjBuE,EACF,kBAAC/B,EAAA,EAAD,CAAMrB,KAAK,QAAQkB,UAAU,UAC1BrC,EAAqB,IAEL,WAAjBuE,EACF,kBAAC/B,EAAA,EAAD,CAAMrB,KAAK,QAAQkB,UAAU,UAC1BrC,EAAqB,IAEL,SAAjBuE,EACF,kBAAC/B,EAAA,EAAD,CAAMrB,KAAK,QAAQkB,UAAU,UAC1BrC,EAAqB,IAGxB,kBAACwC,EAAA,EAAD,CAAMrB,KAAK,QAAQkB,UAAU,UAC1BrC,EAAqB,KAK5B,kBAACW,EAAA,EAAD,CAAKC,WAAW,OAAOC,UAAU,UAC/B,kBAACc,EAAA,EAAD,CACEE,KAAK,SACLC,QAAS,CAAC,OAAQ,OAClBkD,IAAI,QACJpE,WAAW,OACXE,MAAM,UAELuD,GACCA,EAAeY,KAAI,SAAA7E,GAAK,OAAI,kBAAC,EAAD,CAAeA,MAAOA,W,QCnC/C8E,EA3BM,SAAAC,GAAU,IAAD,EAC5B,OACE,6BACE,kBAACxE,EAAA,EAAD,CAAKE,UAAU,MAAMmC,QAAQ,SAASlC,MAAM,SAASQ,IAAI,SACvD,kBAACX,EAAA,GAAD,GACEM,QAAM,EACNK,IAAI,SACJR,MAAM,SACNgC,aAAa,SACbpB,MAAM,SACNN,MAAM,SANR,uBAOU,CAAEF,MAAO,UAAWC,KAAM,WAPpC,+BAQkB,CAAED,MAAO,YAR3B,yBASW,kBACPkE,OAAOC,SAASC,QAAhB,sBAAuCH,EAAMI,SAAS7E,QAV1D,GAaGyE,EAAM9E,KACP,kBAACmC,EAAA,EAAD,CAAMjB,OAAQ,CAAEC,IAAK,SAAWL,KAAK,SAASkB,UAAU,OACrD8C,EAAMI,SAASvD,U,sDCyCbwD,EA1DM,WAAO,IAAD,EACWzF,mBAAS,MADpB,mBAClB0F,EADkB,KACNC,EADM,KAGzBjB,qBAAU,YACW,uCAAG,8BAAAC,EAAA,sEACGrB,MAAM,mBADT,cACdsB,EADc,gBAEDA,EAASC,OAFR,OAEde,EAFc,OAGpBD,EAAcC,GACd5B,QAAQC,IAAI2B,GAJQ,2CAAH,qDAMnBC,KACC,IAEH,IAAMC,EAAQ,CACZ,kBAACC,EAAA,EAAD,CAAO3E,KAAK,UACZ,kBAAC4E,EAAA,EAAD,CAAS5E,KAAK,UACd,kBAAC6E,EAAA,EAAD,CAAK7E,KAAK,UACV,kBAAC8E,EAAA,EAAD,CAAM9E,KAAK,UACX,kBAAC+E,EAAA,EAAD,CAAW/E,KAAK,UAChB,kBAACgF,EAAA,EAAD,CAAShF,KAAK,WAGhB,OACE,kBAACR,EAAA,EAAD,KACE,kBAACyB,EAAA,EAAD,CACEb,OAAQ,CAAEE,KAAM,KAAM2E,OAAQ,SAAU5E,IAAK,UAC7Ca,UAAU,SACVzB,WAAW,OACXM,MAAM,WAJR,cAQA,kBAACsB,EAAA,EAAD,CAAMrB,KAAK,QAAQkB,UAAU,UAA7B,gFAIA,kBAACV,EAAA,EAAD,CACEqB,QAAQ,SACRF,aAAa,SACblC,WAAW,OACXiB,KAAK,SACLN,OAAQ,CAAE6E,OAAQ,UAClBtE,QAAS,CAAC,OAAQ,QAEjB2D,GACCA,EAAWR,KAAI,SAACM,EAAUc,GAAX,OACb,kBAAC,EAAD,CACEhG,KAAMwF,EAAMQ,GACZC,IAAKf,EAAS7E,GACd6E,SAAUA,EACV7E,GAAI6E,EAAS7E,W,oCCNZ6F,EA9CE,WACf,OACE,yBAAKzB,UAAU,aACb,kBAAC1C,EAAA,EAAD,CAASlB,MAAM,WAAf,YAEA,kBAACsF,EAAA,EAAD,CAAMC,OAAO,gBAAgBnD,OAAO,QAClC,kBAACoD,EAAA,EAAD,CAAWC,UAAQ,EAAC7B,UAAU,aAAa5B,MAAM,YAC/C,kBAAC0D,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,uBACZ9E,KAAK,cAIT,kBAAC0E,EAAA,EAAD,CAAW5B,UAAU,aAAa5B,MAAM,SACtC,kBAAC0D,EAAA,EAAD,CACEC,KAAK,QACLC,YAAY,oBACZ9E,KAAK,WAIT,kBAAC0E,EAAA,EAAD,CAAWC,UAAQ,EAAC7B,UAAU,aAAa5B,MAAM,YAC/C,kBAAC0D,EAAA,EAAD,CACEC,KAAK,WACLC,YAAY,uBACZ9E,KAAK,cAIT,kBAACiB,EAAA,EAAD,CACE1B,OAAQ,CAAEE,KAAM,QAAS2E,OAAQ,SAAU5E,IAAK,SAChD2B,SAAO,EACP0D,KAAK,SACL3D,MAAM,SACNhC,MAAM,aAIV,kBAAC6F,EAAA,EAAD,CAAQ7F,MAAM,UAAU8F,KAAK,UAA7B,8BCASC,EAtCD,WACZ,OACE,yBAAKnC,UAAU,aACb,kBAAC1C,EAAA,EAAD,CAASlB,MAAM,WAAf,SAEA,kBAACsF,EAAA,EAAD,CAAMC,OAAO,aAAanD,OAAO,QAC/B,kBAACoD,EAAA,EAAD,CAAWC,UAAQ,EAAC7B,UAAU,aAAa5B,MAAM,YAC/C,kBAAC0D,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,uBACZ9E,KAAK,cAIT,kBAAC0E,EAAA,EAAD,CAAWC,UAAQ,EAAC7B,UAAU,aAAa5B,MAAM,YAC/C,kBAAC0D,EAAA,EAAD,CACEC,KAAK,WACLC,YAAY,uBACZ9E,KAAK,cAIT,kBAACiB,EAAA,EAAD,CACE1B,OAAQ,CAAEE,KAAM,QAAS2E,OAAQ,SAAU5E,IAAK,SAChD2B,SAAO,EACP0D,KAAK,SACL3D,MAAM,SACNhC,MAAM,aAIV,kBAAC6F,EAAA,EAAD,CAAQ7F,MAAM,UAAU8F,KAAK,aAA7B,kC,iBC2GSE,EA1IK,SAAA/B,GAAU,IAAD,EACDpF,mBAAS,IADR,mBACpBK,EADoB,KACb+G,EADa,OAEDpH,mBAAS,IAFR,mBAEpBwC,EAFoB,KAEb6E,EAFa,OAGWrH,mBAAS,IAHpB,mBAGpB8C,EAHoB,KAGPwE,EAHO,OAIatH,mBAAS,MAJtB,mBAIpBuH,EAJoB,KAINC,EAJM,OAKSxH,mBAAS,MALlB,mBAKpBmE,EALoB,KAKRsD,EALQ,KAMrBC,EAAarH,EAAMuC,KACrBvC,EAAMuC,KAAK+E,MAAM,EAAGtH,EAAMuC,KAAKgF,OAAS,GACxCjF,KAAKkF,MARkB,EASH7H,mBAAS0H,GATN,mBASpB9E,EAToB,KASdkF,EATc,KA6D3B,OA7BApD,qBAAU,WAAM,4CACd,8BAAAC,EAAA,+EAE2BrB,MAAM,mBAFjC,cAEUsB,EAFV,gBAGuBA,EAASC,OAHhC,OAGUe,EAHV,OAII4B,EAAgB5B,GAJpB,kDAMI5B,QAAQC,IAAR,MANJ,2DADc,kEAWd,8BAAAU,EAAA,+EAE2BrB,MAAM,cAAD,OAAe8B,EAAM1E,UAFrD,cAEUkE,EAFV,gBAGuBA,EAASC,OAHhC,OAGUe,EAHV,OAIIwB,EAASxB,GACTyB,EAASzB,EAAKpD,OACd8E,EAAe1B,EAAK9C,aACpBgF,EAAQlC,EAAKhD,MACb6E,EAAc7B,EAAKmC,aARvB,kDAUI/D,QAAQC,IAAR,MAVJ,2DAXc,uBAAC,WAAD,wBAyBd4B,GAzBc,mCA0BdmC,KACC,IAGD,6BACE,kBAACC,EAAA,EAAD,CAAOC,KAAM9C,EAAM8C,KAAMC,OAAQ/C,EAAMgD,aACrC,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GAAzB,oBACA,kBAACL,EAAA,EAAMM,KAAP,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKV,MAAN,CAAYyC,UAAU,aACpB,kBAAC/B,EAAA,EAAKgC,MAAN,cACA,kBAAChC,EAAA,EAAKiC,QAAN,CACEC,SAAU,SAAAC,GAAC,OAAIvB,EAASuB,EAAEC,OAAO3I,QACjC4G,KAAK,OACLC,YAAY,gCACZ7G,MAAOsC,KAIX,kBAACiE,EAAA,EAAKV,MAAN,CAAYyC,UAAU,mBACpB,kBAAC/B,EAAA,EAAKgC,MAAN,oBACA,kBAAChC,EAAA,EAAKiC,QAAN,CACEC,SAAU,SAAAC,GAAC,OAAItB,EAAesB,EAAEC,OAAO3I,QACvC4I,GAAG,WACHhH,KAAK,IACLiF,YAAY,wCACZ7G,MAAO4C,KAIX,kBAAC2D,EAAA,EAAKV,MAAN,CAAYyC,UAAU,mBACpB,kBAAC/B,EAAA,EAAKgC,MAAN,iBACA,kBAAChC,EAAA,EAAKiC,QAAN,CACEC,SAAU,SAAAC,GAAC,OAAInB,EAAcmB,EAAEC,OAAO3I,QACtC4I,GAAG,UAEFvB,GACCA,EAAarC,KAAI,SAAAM,GACf,OAAInF,EAAM0H,cAAgBvC,EAAS7E,GAE/B,4BAAQoI,UAAQ,EAACxC,IAAKf,EAAS7E,GAAIT,MAAOsF,EAAS7E,IAChD6E,EAASvD,MAKd,4BAAQsE,IAAKf,EAAS7E,GAAIT,MAAOsF,EAAS7E,IACvC6E,EAASvD,WAOtB,kBAACwE,EAAA,EAAKV,MAAN,CAAYyC,UAAU,YACpB,kBAAC/B,EAAA,EAAKgC,MAAN,aACA,kBAAChC,EAAA,EAAKiC,QAAN,CACEC,SAAU,SAAAC,GAAC,OAAId,EAAQc,EAAEC,OAAO3I,QAChC4G,KAAK,iBACLhF,KAAK,IACLkH,aAActB,GAA0B,QAI5C,kBAACxE,EAAA,EAAD,CACEG,QAhHQ,SAAAuF,GAClBA,EAAEK,iBAEF,IAAMC,EAAY,CAChB1G,MAAOA,EACPM,YAAaA,EACbqB,WAAYA,EACZvB,KAAMA,EACNlC,QAAS0E,EAAM1E,SAGjBsD,QAAQC,IAAIiF,GACZ5F,MAAM,cAAe,CACnBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUuF,KAEpBtF,MAAK,kBAAMyB,OAAOC,SAAS6D,YAC3BrF,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA+FlB3C,KAAK,QACLgC,SAAO,EACPvC,WAAW,OACXiG,KAAK,SACL3D,MAAM,mBACNhC,MAAM,iBCOLiI,EAvIQ,SAAC,GAAe,IAAb/I,EAAY,EAAZA,MAAY,EACZL,oBAAS,GADG,mBAC7BkI,EAD6B,KACvBmB,EADuB,OAEIrJ,mBAAS,IAFb,mBAE7BwE,EAF6B,KAEfC,EAFe,KAkBpCC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBrB,MAAM,mBAAD,OAAoBjD,EAAM0H,cADxD,cACQnD,EADR,gBAEqBA,EAASC,OAF9B,OAEQ5C,EAFR,OAGE+B,QAAQC,IAAIhC,GACZwC,EAAgBxC,GAJlB,4CADc,uBAAC,WAAD,wBAQdqH,KACC,IAKH,OACE,kBAAC1I,EAAA,EAAD,KACE,kBAAC,EAAD,CAAasH,KAAMA,EAAME,YALT,kBAAMiB,GAAQ,IAKqB3I,QAASL,EAAMM,KAElE,kBAACC,EAAA,EAAD,CACEC,WAAW,OACXC,UAAU,SACVC,MAAM,SACNC,UAAU,SACVC,WAAW,UACXC,OAAQ,CAAEC,MAAO,UAAWC,KAAM,UAClCC,MAAM,SACNE,IAAI,SACJC,OAAQ,CAAEC,IAAK,OACfE,MAAM,OAEN,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLhB,WAAW,OACXiB,KAAM,CAAC,SAAU,UAAW,SAAU,QACtCC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,MAAO,CACL,CAAEC,KAAM,WAAYC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAC5C,CAAEF,KAAM,SAAUC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAC1C,CAAEF,KAAM,OAAQC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACxC,CAAEF,KAAM,OAAQC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACxC,CAAEF,KAAM,UAAWC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,MAG7C,kBAACvB,EAAA,EAAD,CAAKC,WAAW,OAAOuB,SAAS,UAC9B,kBAACC,EAAA,EAAD,CACErB,UAAU,QACVsB,UAAU,QACVC,MAAM,IACN1B,WAAW,OACXW,OAAQ,CAAEC,IAAK,UAEdpB,EAAMmC,QAGX,kBAAC5B,EAAA,EAAD,CAAKwB,SAAS,YACZ,kBAACC,EAAA,EAAD,CAASC,UAAU,MAAMd,OAAQ,CAAEkB,SAAU,UAAYH,MAAM,KAC5DiC,EAAavC,OAGlB,kBAACrB,EAAA,EAAD,CAAKwB,SAAS,QACZ,kBAACK,EAAA,EAAD,CAAMrB,KAAK,QAAQkB,UAAU,SAASd,OAAQ,CAAEkB,SAAU,SACvD,IAAIC,KAAKtC,EAAMuC,MAAMC,mBAG1B,kBAACjC,EAAA,EAAD,CAAKwB,SAAS,QACZ,kBAACK,EAAA,EAAD,CACErB,KAAK,SACLI,OAAQ,CAAEkB,SAAU,QACpBJ,UAAU,UAETjC,EAAMyC,cAGX,kBAAClC,EAAA,EAAD,CACEwB,SAAS,UACTZ,OAAQ,CAAEC,IAAK,UACfsB,aAAa,SACbhC,MAAM,SACNC,UAAU,SACVgC,KAAK,OACLlC,UAAU,MACVmC,QAAQ,UAER,kBAACrC,EAAA,EAAD,CAAKoC,KAAK,OAAOjC,MAAM,UACrB,kBAACmC,EAAA,EAAD,CACErC,WAAW,OACXsC,MAAM,SACNE,QA3EK,kBAAMgG,GAAQ,IA4EnBlI,MAAM,aAGV,kBAACP,EAAA,EAAD,CAAKoC,KAAK,OAAOjC,MAAM,UACrB,kBAACmC,EAAA,EAAD,CACErC,WAAW,OACXsC,MAAM,SACNE,QA7GM,WAClBC,MAAM,cAAe,CACnBC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEjD,QAASL,EAAMM,OAErCiD,MAAK,WACJyB,OAAOC,SAAS6D,YAEjBrF,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAoGJ5C,MAAM,aAGV,kBAACP,EAAA,EAAD,CAAKoC,KAAK,OAAOjC,MAAM,UACrB,kBAAC,IAAD,CAAMwI,GAAE,qBAAgBlJ,EAAMM,KAC5B,kBAACuC,EAAA,EAAD,CACE9B,KAAK,SACLP,WAAW,OACXuC,SAAO,EACPD,MAAM,iBACNhC,MAAM,mBCVTqI,EAnHE,SAAApE,GAAU,IAAD,EACEpF,mBAAS,IADX,mBACjBwC,EADiB,KACV6E,EADU,OAEcrH,mBAAS,IAFvB,mBAEjB8C,EAFiB,KAEJwE,EAFI,OAGgBtH,mBAAS,MAHzB,mBAGjBuH,EAHiB,KAGHC,EAHG,OAIYxH,mBAAS,GAJrB,mBAIjBmE,EAJiB,KAILsD,EAJK,OAKAzH,mBAAS,MALT,mBAKjB4C,EALiB,KAKXkF,EALW,KAMlBoB,EAAY,CAChB1G,MAAOA,EACPM,YAAaA,EACbqB,WAAYA,EACZvB,KAAMA,GA4BR,OAdA8B,qBAAU,WAAM,4CACd,8BAAAC,EAAA,+EAE2BrB,MAAM,mBAFjC,cAEUsB,EAFV,gBAGuBA,EAASC,OAHhC,OAGUe,EAHV,OAII4B,EAAgB5B,GAJpB,kDAMI5B,QAAQC,IAAR,MANJ,2DADc,uBAAC,WAAD,wBAWd4B,KACC,IAGD,6BACE,kBAACoC,EAAA,EAAD,CAAOC,KAAM9C,EAAM8C,KAAMC,OAAQ/C,EAAMgD,aACrC,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GAAzB,oBACA,kBAACL,EAAA,EAAMM,KAAP,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKV,MAAN,CAAYyC,UAAU,aACpB,kBAAC/B,EAAA,EAAKgC,MAAN,cACA,kBAAChC,EAAA,EAAKiC,QAAN,CACEC,SAAU,SAAAC,GAAC,OAAIvB,EAASuB,EAAEC,OAAO3I,QACjC4G,KAAK,OACLC,YAAY,mCAGhB,kBAACN,EAAA,EAAKV,MAAN,CAAYyC,UAAU,mBACpB,kBAAC/B,EAAA,EAAKgC,MAAN,oBACA,kBAAChC,EAAA,EAAKiC,QAAN,CACEC,SAAU,SAAAC,GAAC,OAAItB,EAAesB,EAAEC,OAAO3I,QACvC4I,GAAG,WACHhH,KAAK,IACLiF,YAAY,2CAIhB,kBAACN,EAAA,EAAKV,MAAN,CAAYyC,UAAU,mBACpB,kBAAC/B,EAAA,EAAKgC,MAAN,iBACA,kBAAChC,EAAA,EAAKiC,QAAN,CACEC,SAAU,SAAAC,GAAC,OAAInB,EAAcmB,EAAEC,OAAO3I,QACtC4I,GAAG,UAEFvB,GACCA,EAAarC,KAAI,SAACM,EAAUc,GAC1B,OAAU,IAANA,EAEA,4BACEC,IAAKf,EAAS7E,GACdT,MAAOsF,EAAS7E,GAChBoI,SAAS,YAERvD,EAASvD,MAKd,4BAAQsE,IAAKf,EAAS7E,GAAIT,MAAOsF,EAAS7E,IACvC6E,EAASvD,WAOtB,kBAACwE,EAAA,EAAKV,MAAN,CAAYyC,UAAU,YACpB,kBAAC/B,EAAA,EAAKgC,MAAN,aACA,kBAAChC,EAAA,EAAKiC,QAAN,CACEC,SAAU,SAAAC,GAAC,OAAId,EAAQc,EAAEC,OAAO3I,QAChC4G,KAAK,iBACLhF,KAAK,OAIT,kBAACoB,EAAA,EAAD,CACEG,QAvFK,SAAAuF,GACfA,EAAEK,iBACF3F,MAAM,WAAY,CAChBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUuF,KAEpBtF,MAAK,kBAAMyB,OAAOC,SAAS6D,YAC3BrF,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAgFlB5C,MAAM,UACNC,KAAK,QACLgC,SAAO,EACPvC,WAAW,OACXiG,KAAK,SACL3D,MAAM,0B,kBCrBLsG,MAnFf,WAAsB,IAAD,EACQzJ,mBAAS,IADjB,mBACZ0J,EADY,KACJtC,EADI,OAEepH,oBAAS,GAFxB,mBAEZ2J,EAFY,KAEDC,EAFC,OAGK5J,oBAAS,GAHd,mBAGZkI,EAHY,KAGNmB,EAHM,KAiCnB,OAhBA3E,qBAAU,WACRkF,GAAa,GACbtG,MAAM,kBACHM,MAAK,SAACiG,GAAD,OAASA,EAAIhF,UAClBjB,MAAK,SAACvD,GACL,IAAMyJ,EAAS,YAAOzJ,GACtB+G,EAAS0C,GACTF,GAAa,MAEd9F,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAlBhBT,MAAM,cACHM,MAAK,SAAAgB,GACJZ,QAAQC,IAAIW,GACZA,EAASC,UAEVf,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAiB3B,IAGD,oCACE,kBAACnD,EAAA,EAAD,CAAKC,WAAW,OAAOkE,UAAU,aAC/B,kBAAC1C,EAAA,EAAD,CACEb,OAAQ,CAAE6E,OAAQ,UAClB/D,UAAU,SACVzB,WAAW,OACXM,MAAM,WAJR,oBAQA,kBAAC+B,EAAA,EAAD,CACElC,UAAU,SACVoC,SAAO,EACPjC,MAAM,UACNkC,QA3CW,kBAAMgG,GAAQ,IA4CzBlG,MAAM,qBAER,kBAAC,EAAD,CAAUxC,GAAG,WAAWuH,KAAMA,EAAME,YA7CtB,kBAAMiB,GAAQ,OA+C7BM,EACC,kBAACI,EAAA,EAAD,CAAShF,UAAU,UAAUiF,UAAU,SAASC,KAAK,UACnD,0BAAMlF,UAAU,WAAhB,eAGF,kBAACmF,EAAA,EAAD,KACqB,IAAlBR,EAAO9B,OACN,kBAACvF,EAAA,EAAD,CAASE,MAAM,IAAI5B,GAAG,mBAAmB2B,UAAU,UAAnD,0CAIA,qCAEF,kBAACV,EAAA,EAAD,CACEE,KAAK,SACLC,QAAS,CAAC,OAAQ,OAClBkD,IAAI,QACJpE,WAAW,OACXE,MAAM,UAEL2I,GACCA,EAAOxE,KAAI,SAAC7E,GACV,OAAO,kBAAC,EAAD,CAAgBkG,IAAKlG,EAAMM,GAAIN,MAAOA,W,qQC1E7D,IAAM8J,GAAQC,UAAOC,MAAV,KAILC,GAAeF,UAAOC,MAAV,KA6EHE,OAxEf,WAAuB,IAqDjBC,EAKAC,EA1DgB,EACQzK,qBADR,mBACb0K,EADa,KACLC,EADK,OAEsB3K,mBAAS,MAF/B,mBAEb4K,EAFa,KAEEC,EAFF,KAGZC,EAAW1G,cAAX0G,OAEFC,EAAYC,mBACZC,EAAeD,mBACfE,EAASF,mBA0Df,OAxDAtG,qBAAU,WAGR,IAAIyG,EAFJD,EAAOE,QAAUC,MACjBH,EAAOE,QAAQE,KAAK,aAAcR,GAElCI,EAAOE,QAAQG,GAAG,mBAAmB,SAAAX,GACnC5G,QAAQC,IAAI,CAAE2G,kBACdC,EAAiBD,GAEjBY,UAAUC,aACPC,aAAa,CAAErB,OAAO,EAAMsB,OAAO,IACnC/H,MAAK,SAAA8G,GACJC,EAAUD,GACVS,EAAO,IAAIS,IAAW,CACpBC,UAAWjB,EACXkB,SAAS,EACTpB,OAAQA,IAENK,EAAUK,UACZpH,QAAQC,IAAI,CAAE8G,cACdA,EAAUK,QAAQW,UAAYrB,GAGhCS,EAAKI,GAAG,UAAU,SAAA3F,GAChB5B,QAAQC,IAAI,qBAAsB2B,GAClCsF,EAAOE,QAAQE,KAAK,SAAU1F,MAGhCuF,EAAKI,GAAG,UAAU,SAAAS,GAChBnB,GAAiB,GACjB7G,QAAQC,IAAI,CAAE+H,kBACVf,EAAaG,UACfH,EAAaG,QAAQW,UAAYC,MAIrCd,EAAOE,QAAQG,GAAG,UAAU,SAAA3F,GAC1B5B,QAAQC,IAAI,uBAAwB2B,GACpCuF,EAAKc,OAAOrG,GACZ5B,QAAQC,IAAI,CAAEkH,oBAIrB,IAGCT,IACFF,EAAY,kBAACL,GAAD,CAAO+B,aAAW,EAACC,OAAK,EAACC,IAAKrB,EAAWsB,UAAQ,KAK7D5B,EADEG,EACa,kBAACN,GAAD,CAAc4B,aAAW,EAACE,IAAKnB,EAAcoB,UAAQ,IAErD,yDAIf,kBAACnC,EAAA,EAAD,CAAOlJ,UAAU,UACf,kBAACJ,EAAA,EAAD,CAAKG,MAAM,UAAU0J,GACrB,kBAAC7J,EAAA,EAAD,CAAKY,OAAQ,CAAEC,IAAK,QAASC,KAAM,UAAY8I,K,mDCXtC8B,GAnEF,WACX,OACE,yBAAKvH,UAAU,YACb,6BAASA,UAAU,WACjB,2BAAOA,UAAU,YACf,kBAAC1C,EAAA,EAAD,CAAS0C,UAAU,UAAnB,gBACe,0BAAMA,UAAU,aAAhB,cAEf,kBAACtC,EAAA,EAAD,CAAMtB,MAAM,UAAUC,KAAK,QAAQkB,UAAU,SAA7C,0PAOF,yBACEiK,IAAKC,KACLzH,UAAU,SACV0H,IAAI,qGAIR,wBAAI1H,UAAU,oBAAd,kBACA,6BAASA,UAAU,cACjB,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAAMwE,GAAG,aACP,kBAACmD,GAAA,EAAD,CAAM3H,UAAU,WAAW5D,MAAM,UAAUC,KAAK,YAElD,yBAAK2D,UAAU,eACb,kBAAC,IAAD,CAAMwE,GAAG,aACP,uCAEF,qEAGJ,yBAAKxE,UAAU,YACb,kBAAC4H,GAAA,EAAD,CAAQ5H,UAAU,aAAa5D,MAAM,UAAUC,KAAK,WACpD,yBAAK2D,UAAU,eACb,0CACA,mFAGJ,yBAAKA,UAAU,YACb,kBAAC6H,GAAA,EAAD,CAAM7H,UAAU,WAAW5D,MAAM,UAAUC,KAAK,WAChD,yBAAK2D,UAAU,eACb,0CACA,wHAQN,6BAASA,UAAU,cACjB,uHAKF,gCACE,qD,4DCwCO8H,GAvGY,SAAC,GAAe,IAAbxM,EAAY,EAAZA,MAe5B,OAFA2D,QAAQC,IAAI5D,GAGV,kBAACO,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CACEC,WAAW,OACXC,UAAU,SACVC,MAAM,SACNC,UAAU,SACVC,WAAW,UACXC,OAAQ,CAAEC,MAAO,UAAWC,KAAM,UAClCC,MAAM,SACNC,OAAO,cACPC,IAAI,SACJC,OAAQ,CAAEC,IAAK,OACfE,MAAM,OAEN,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAM,CAAC,OAAQ,SAAU,UAAW,QACpCC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,MAAO,CACL,CAAEC,KAAM,WAAYC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAC5C,CAAEF,KAAM,SAAUC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAC1C,CAAEF,KAAM,OAAQC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACxC,CAAEF,KAAM,OAAQC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACxC,CAAEF,KAAM,UAAWC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,MAG7C,kBAACvB,EAAA,EAAD,CAAKC,WAAW,OAAOuB,SAAS,UAC9B,kBAACC,EAAA,EAAD,CACErB,UAAU,QACVsB,UAAU,QACVC,MAAM,IACN1B,WAAW,OACXW,OAAQ,CAAEC,IAAK,UAEdpB,EAAMmC,QAGX,kBAAC5B,EAAA,EAAD,CAAKwB,SAAS,YACZ,kBAACC,EAAA,EAAD,CAASC,UAAU,MAAMd,OAAQ,CAAEkB,SAAU,UAAYH,MAAM,KAC5DlC,EAAM4B,OAGX,kBAACrB,EAAA,EAAD,CAAKwB,SAAS,QACZ,kBAACK,EAAA,EAAD,CAAMrB,KAAK,QAAQkB,UAAU,SAASd,OAAQ,CAAEkB,SAAU,SACvD,IAAIC,KAAKtC,EAAMuC,MAAMC,mBAG1B,kBAACjC,EAAA,EAAD,CAAKwB,SAAS,QACZ,kBAACK,EAAA,EAAD,CACErB,KAAK,SACLI,OAAQ,CAAEkB,SAAU,QACpBJ,UAAU,UAETjC,EAAMyC,cAGX,kBAAClC,EAAA,EAAD,CACEwB,SAAS,UACT6C,IAAI,SACJzD,OAAQ,CAAEC,IAAK,QAASC,KAAM,OAC9BZ,UAAU,OAEV,kBAACoC,EAAA,EAAD,CACE9B,KAAK,SACLP,WAAW,OACXoE,IAAI,QACJ9B,MAAM,UACNE,QAlFO,WACjBC,MAAM,mBAAoB,CACxBC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEmJ,OAAQzM,EAAMM,OAEpCiD,MAAK,WACJyB,OAAOC,SAAS6D,YAEjBrF,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA0ElB5C,MAAM,YAER,kBAAC,IAAD,CAAMoI,GAAE,qBAAgBlJ,EAAM0M,WAC5B,kBAAC7J,EAAA,EAAD,CACE9B,KAAK,SACLP,WAAW,OACXuC,SAAO,EACP6B,IAAI,QACJ9B,MAAM,iBACNhC,MAAM,kBCvBP6L,OArEf,WAA4B,IAAD,EACmBhN,mBAAS,IAD5B,mBAClBiN,EADkB,KACFC,EADE,OAESlN,oBAAS,GAFlB,mBAElB2J,EAFkB,KAEPC,EAFO,OAGH5J,mBAAS,MAHN,mBAGbmN,GAHa,WA2BzB,OAtBAzI,qBAAU,WAENkF,GAAa,GACbtG,MAAM,kBACHM,MAAK,SAAAiG,GAAG,OAAIA,EAAIhF,UAChBjB,MAAK,SAAAvD,GACJ,IAAMyJ,EAAS,YAAOzJ,GACtB6M,EAAkBpD,GAClBF,GAAa,MAEd9F,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GAEZoJ,EADApJ,EAAM,mDAMX,IAEHC,QAAQC,IAAIgJ,GAGV,oCACE,kBAACrM,EAAA,EAAD,KACE,kBAACyB,EAAA,EAAD,CACE0C,UAAU,sBACVlE,WAAW,OACXM,MAAM,WAHR,8BASDwI,EACC,kBAACI,EAAA,EAAD,CAAShF,UAAU,UAAUiF,UAAU,SAASC,KAAK,UACnD,0BAAMlF,UAAU,WAAhB,eAGF,kBAACmF,EAAA,EAAD,KAC6B,IAA1B+C,EAAerF,OACd,kBAACvF,EAAA,EAAD,CAASE,MAAM,IAAIwC,UAAU,eAAezC,UAAU,UAAtD,+CAIA,qCAEF,kBAACV,EAAA,EAAD,CACEE,KAAK,SACLC,QAAS,CAAC,OAAQ,OAClBkD,IAAI,QACJpE,WAAW,OACXE,MAAM,UAELkM,GACCA,EAAe/H,KAAI,SAAA7E,GACjB,OAAO,kBAAC,GAAD,CAAoBkG,IAAKlG,EAAMM,GAAIN,MAAOA,WCiDlD+M,OAnGf,WAIE,OACE,kBAAC,IAAD,KACE,kBAAC/E,GAAA,EAAD,CAAQpH,WAAW,UAAUM,IAAI,UAC/B,kBAACX,EAAA,EAAD,CACEE,UAAU,MACVD,WAAW,OACXc,MAAM,QACNZ,MAAM,SACNkE,IAAI,SAEJ,kBAAC,IAAD,CAAMsE,GAAG,KACP,kBAAC8D,GAAA,EAAD,CAAOd,IAAKe,KAAMC,IAAI,UAAUxI,UAAU,UAE3CyI,SAASC,OACR,oCACE,kBAACzG,EAAA,EAAD,CAAQ7F,MAAM,UAAU4D,UAAU,UAAUkC,KAAK,SAAjD,oBAGA,kBAACD,EAAA,EAAD,CAAQ7F,MAAM,UAAU4D,UAAU,UAAUkC,KAAK,eAAjD,cAGA,kBAACD,EAAA,EAAD,CACE7F,MAAM,UACN4D,UAAU,UACVkC,KAAK,mBAHP,yBASF,sCAGJ,kBAACyG,GAAA,EAAD,CAAK5M,UAAU,OACZ0M,SAASC,OACR,oCACE,kBAACzG,EAAA,EAAD,CACEC,KAAK,SACL9F,MAAM,UACNR,GAAG,QACH0C,QAAS,WA1CrBC,MAAM,eAAeQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAsCpC,WAUF,oCACE,kBAACiD,EAAA,EAAD,CAAQ7F,MAAM,UAAU4D,UAAU,UAAUkC,KAAK,UAAjD,SAGA,kBAACD,EAAA,EAAD,CAAQ7F,MAAM,UAAU4D,UAAU,UAAUkC,KAAK,aAAjD,eAQR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,sBACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,2BACV,kBAAC,EAAD,KACE,kBAAC,EAAD,QAIJ,kBAAC,IAAD,CAAOA,KAAK,mBACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,UChGUC,QACW,cAA7BxI,OAAOC,SAASwI,UAEe,UAA7BzI,OAAOC,SAASwI,UAEhBzI,OAAOC,SAASwI,SAASC,MACvB,2D,qBCDNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,GAAA,EAAD,CAASC,MAZC,CACZC,OAAQ,CACNC,KAAM,CACJC,OAAQ,SACRnN,KAAM,OACNoN,OAAQ,WAQR,kBAAC,GAAD,QAGJhB,SAASiB,eAAe,SD4GpB,kBAAmBjD,WACrBA,UAAUkD,cAAcC,MACrB/K,MAAK,SAAAgL,GACJA,EAAaC,gBAEd/K,OAAM,SAAAgL,GACL9K,QAAQ8K,MAAMA,EAAMC,c","file":"static/js/main.01e1e4a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/people.b5ecbc2c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/navy-logo.bcd8140a.png\";","import React, { createContext } from 'react'\n\nconst CategoriesContext = createContext({})\n\nexport default CategoriesContext\n","import React, { useState } from 'react'\nimport CategoriesContext from './CategoriesContext'\n\nconst CategoriesContextProvider = ({ children }) => {\n  const [categoryDescriptions, setCategoryDescriptions] = useState([\n    \"This is for those who feel they don't need conversation starters and want to talk about anything and everything!\",\n    \"If gaming is your kind of conversation starter, these SmallTalk's might be a good fit!\",\n    \"What's new in the beauty realm? You can start with tried and trues as well as any other trends here!\",\n    \"What's more entertaining than watching a game? Talking about it with others, of course! You can start with all things sports here!\",\n    \"What's not to talk about when it comes to food? Talk about your favorite spots or dishes you can't wait to try!\",\n    \"Whether you're into physical books or ebooks, carryout conversations based around your favorite reads!\"\n  ])\n\n  const value = {\n    categoryDescriptions\n  }\n\n  return (\n    <CategoriesContext.Provider value={value}>\n      {children}\n    </CategoriesContext.Provider>\n  )\n}\n\nexport default CategoriesContextProvider\n","import React, { useState } from 'react'\nimport { Box, Button, Heading, Text, Grid } from 'grommet'\nimport { Checkmark } from 'grommet-icons'\n\nconst CategoryEvent = ({ event }) => {\n  const [icon, setIcon] = useState(null)\n\n  const rsvpInfo = {\n    userId: event.userId,\n    eventId: event.id\n  }\n\n  const addRSVP = () => {\n    fetch('/api/rsvp', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(rsvpInfo)\n    })\n      .then(() => {\n        setIcon(<Checkmark />)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <Box\n      responsive='true'\n      direction='column'\n      align='center'\n      alignSelf='center'\n      background='#D3EBF9'\n      border={{ color: '#17539D', size: 'medium' }}\n      round='xsmall'\n      header='Your Events'\n      pad='medium'\n      margin={{ top: '10%', left: '4.5%' }}\n      width='90%'\n    >\n      <Grid\n        fill='true'\n        responsive='true'\n        rows={['xxsmall', 'xsmall', 'xxsmall', 'auto']}\n        columns={['auto', 'auto', 'auto']}\n        areas={[\n          { name: 'header', start: [0, 0], end: [1, 1] },\n          { name: 'time', start: [0, 1], end: [2, 1] },\n          { name: 'desc', start: [0, 2], end: [2, 2] },\n          { name: 'buttons', start: [0, 3], end: [2, 3] }\n        ]}\n      >\n        <Box responsive='true' gridArea='header'>\n          <Heading\n            alignSelf='start'\n            textAlign='start'\n            level='2'\n            responsive='true'\n            margin={{ top: 'small' }}\n          >\n            {event.title}\n          </Heading>\n        </Box>\n        <Box responsive='true' gridArea='time'>\n          <Text size='large' textAlign='center' margin={{ vertical: 'auto' }}>\n            {new Date(event.date).toLocaleString()}\n          </Text>\n        </Box>\n        <Box responsive='true' gridArea='desc'>\n          <Text size='medium' margin={{ vertical: 'auto' }} textAlign='center'>\n            {event.description}\n          </Text>\n        </Box>\n        <Box\n          gridArea='buttons'\n          margin={{ top: 'large' }}\n          alignContent='center'\n          align='center'\n          alignSelf='center'\n          flex='true'\n          direction='row'\n          justify='evenly'\n        >\n          <Box responsive='true'>\n            <Button\n              responsive='true'\n              label='RSVP'\n              icon={icon}\n              primary\n              onClick={addRSVP}\n              color='#6AB8E0'\n            />\n          </Box>\n        </Box>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default CategoryEvent\n","import React, { useEffect, useState, useContext } from 'react'\nimport CategoryEvent from './CategoryEvent'\nimport { useParams } from 'react-router-dom'\nimport { Grid, Box, Heading, Text } from 'grommet'\nimport CategoriesContext from '../contexts/CategoriesContext'\n\nconst CategoryPage = () => {\n  const { categoryId } = useParams()\n  const { categoryDescriptions } = useContext(CategoriesContext)\n  const [categoryEvents, setCategoryEvents] = useState([])\n  const [categoryName, setCategoryName] = useState('')\n\n  useEffect(() => {\n    async function getEventsByCategory () {\n      const response = await fetch(`/api/categories/${categoryId}`)\n      const json = await response.json()\n      setCategoryEvents(json)\n      console.log(json)\n      setCategoryName(json[0].name)\n    }\n    getEventsByCategory()\n  }, [])\n\n  return (\n    <Box responsive='true'>\n      <Box responsive='true'>\n        <Heading color='#444444' className='categoryHeader' text-align='center'>\n          {categoryName}\n        </Heading>\n        {categoryName === 'General' ? (\n          <Text size='large' textAlign='center'>\n            {categoryDescriptions[0]}\n          </Text>\n        ) : categoryName === 'Gaming' ? (\n          <Text size='large' textAlign='center'>\n            {categoryDescriptions[1]}\n          </Text>\n        ) : categoryName === 'Beauty' ? (\n          <Text size='large' textAlign='center'>\n            {categoryDescriptions[2]}\n          </Text>\n        ) : categoryName === 'Sports' ? (\n          <Text size='large' textAlign='center'>\n            {categoryDescriptions[3]}\n          </Text>\n        ) : categoryName === 'Food' ? (\n          <Text size='large' textAlign='center'>\n            {categoryDescriptions[4]}\n          </Text>\n        ) : (\n          <Text size='large' textAlign='center'>\n            {categoryDescriptions[5]}\n          </Text>\n        )}\n      </Box>\n\n      <Box responsive='true' direction='column'>\n        <Grid\n          rows='medium'\n          columns={['auto', '1/2']}\n          gap='small'\n          responsive='true'\n          align='center'\n        >\n          {categoryEvents &&\n            categoryEvents.map(event => <CategoryEvent event={event} />)}\n        </Grid>\n      </Box>\n    </Box>\n  )\n}\n\nexport default CategoryPage\n","import React from 'react'\nimport { Box, Text } from 'grommet'\n\nconst CategoryCard = props => {\n  return (\n    <div>\n      <Box direction='row' justify='center' align='center' pad='large'>\n        <Box\n          border\n          pad='xlarge'\n          align='center'\n          alignContent='center'\n          width='medium'\n          round='small'\n          border={{ color: '#17539D', size: 'medium' }}\n          hoverIndicator={{ color: '#D3EBF9' }}\n          onClick={() =>\n            window.location.replace(`/categories/${props.category.id}`)\n          }\n        >\n          {props.icon}\n          <Text margin={{ top: 'small' }} size='xlarge' textAlign='end'>\n            {props.category.name}\n          </Text>\n        </Box>\n      </Box>\n    </div>\n  )\n}\n\nexport default CategoryCard\n","import React, { useState, useEffect, useContext } from 'react'\nimport CategoryCard from '../components/CategoryCard'\nimport { Gamepad, Group, Spa, Bike, Cafeteria, Catalog } from 'grommet-icons'\nimport { Grid, Box, Heading, Text } from 'grommet'\n\nconst CategoryList = () => {\n  const [categories, setCategories] = useState(null)\n\n  useEffect(() => {\n    const getCategories = async () => {\n      const response = await fetch('/api/categories')\n      const data = await response.json()\n      setCategories(data)\n      console.log(data)\n    }\n    getCategories()\n  }, [])\n\n  const icons = [\n    <Group size='large' />,\n    <Gamepad size='large' />,\n    <Spa size='large' />,\n    <Bike size='large' />,\n    <Cafeteria size='large' />,\n    <Catalog size='large' />\n  ]\n\n  return (\n    <Box>\n      <Heading\n        margin={{ left: '8%', bottom: 'medium', top: 'medium' }}\n        textAlign='center'\n        responsive='true'\n        color='#444444'\n      >\n        Categories\n      </Heading>\n      <Text size='large' textAlign='center'>\n        Select a category that you would like to focus your conversation starter\n        on!\n      </Text>\n      <Grid\n        justify='center'\n        alignContent='center'\n        responsive='true'\n        rows='medium'\n        margin={{ bottom: 'medium' }}\n        columns={['auto', '1/2']}\n      >\n        {categories &&\n          categories.map((category, i) => (\n            <CategoryCard\n              icon={icons[i]}\n              key={category.id}\n              category={category}\n              id={category.id}\n            />\n          ))}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default CategoryList\n","import React from 'react'\nimport { Form } from 'react-bootstrap'\nimport { FormField, TextInput, Button, Anchor, Heading } from 'grommet'\nconst Register = () => {\n  return (\n    <div className='loginForm'>\n      <Heading color='#304258'>Register</Heading>\n\n      <Form action='/api/register' method='post'>\n        <FormField required className='loginField' label='Username'>\n          <TextInput\n            type='text'\n            placeholder='Enter your username!'\n            name='username'\n          />\n        </FormField>\n\n        <FormField className='loginField' label='Email'>\n          <TextInput\n            type='email'\n            placeholder='Enter your email!'\n            name='email'\n          />\n        </FormField>\n\n        <FormField required className='loginField' label='Password'>\n          <TextInput\n            type='password'\n            placeholder='Enter your password!'\n            name='password'\n          />\n        </FormField>\n\n        <Button\n          margin={{ left: 'large', bottom: 'medium', top: 'small' }}\n          primary\n          type='submit'\n          label='Submit'\n          color='#6AB8E0'\n        />\n      </Form>\n\n      <Anchor color='#6AB8E0' href='/login'>\n        Already have an account?\n      </Anchor>\n    </div>\n  )\n}\n\nexport default Register\n","import React from 'react'\nimport { Form } from 'react-bootstrap'\nimport { FormField, TextInput, Button, Anchor, Heading } from 'grommet'\n\nconst Login = () => {\n  return (\n    <div className='loginForm'>\n      <Heading color='#304258'>Login</Heading>\n\n      <Form action='/api/login' method='post'>\n        <FormField required className='loginField' label='Username'>\n          <TextInput\n            type='text'\n            placeholder='Enter your username!'\n            name='username'\n          />\n        </FormField>\n\n        <FormField required className='loginField' label='Password'>\n          <TextInput\n            type='password'\n            placeholder='Enter your password!'\n            name='password'\n          />\n        </FormField>\n\n        <Button\n          margin={{ left: 'large', bottom: 'medium', top: 'small' }}\n          primary\n          type='submit'\n          label='Submit'\n          color='#6AB8E0'\n        />\n      </Form>\n\n      <Anchor color='#6AB8E0' href='/register'>\n        Haven't made an account yet?\n      </Anchor>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useState, useEffect } from 'react'\nimport { Form, Modal } from 'react-bootstrap'\nimport { Button } from 'grommet'\n\nconst UpdateEvent = props => {\n  const [event, setEvent] = useState('')\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [categoryData, setCategoryData] = useState(null)\n  const [categoryId, setCategoryId] = useState(null)\n  const stringDate = event.date\n    ? event.date.slice(0, event.date.length - 1)\n    : Date.now()\n  const [date, setDate] = useState(stringDate)\n\n  const updateEvent = e => {\n    e.preventDefault()\n\n    const eventInfo = {\n      title: title,\n      description: description,\n      categoryId: categoryId,\n      date: date,\n      eventId: props.eventId\n    }\n\n    console.log(eventInfo)\n    fetch('/api/update', {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(eventInfo)\n    })\n      .then(() => window.location.reload())\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    async function getCategories () {\n      try {\n        const response = await fetch('/api/categories')\n        const data = await response.json()\n        setCategoryData(data)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n\n    async function getEventById () {\n      try {\n        const response = await fetch(`/api/event/${props.eventId}`)\n        const data = await response.json()\n        setEvent(data)\n        setTitle(data.title)\n        setDescription(data.description)\n        setDate(data.date)\n        setCategoryId(data.category_id)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n\n    getCategories()\n    getEventById()\n  }, [])\n\n  return (\n    <div>\n      <Modal show={props.show} onHide={props.handleClose}>\n        <Modal.Header closeButton>Update SmallTalk</Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId='titleForm'>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                onChange={e => setTitle(e.target.value)}\n                type='text'\n                placeholder='What is your SmallTalk about?'\n                value={title}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='descriptionForm'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                onChange={e => setDescription(e.target.value)}\n                as='textarea'\n                rows='3'\n                placeholder='Give a description of your SmallTalk!'\n                value={description}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='categoryOptions'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                onChange={e => setCategoryId(e.target.value)}\n                as='select'\n              >\n                {categoryData &&\n                  categoryData.map(category => {\n                    if (event.category_id === category.id) {\n                      return (\n                        <option selected key={category.id} value={category.id}>\n                          {category.name}\n                        </option>\n                      )\n                    }\n                    return (\n                      <option key={category.id} value={category.id}>\n                        {category.name}\n                      </option>\n                    )\n                  })}\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='dateForm'>\n              <Form.Label>Date</Form.Label>\n              <Form.Control\n                onChange={e => setDate(e.target.value)}\n                type='datetime-local'\n                rows='3'\n                defaultValue={stringDate ? stringDate : null}\n              />\n            </Form.Group>\n\n            <Button\n              onClick={updateEvent}\n              size='small'\n              primary\n              responsive='true'\n              type='submit'\n              label='Update SmallTalk'\n              color='#6AB8E0'\n            />\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\n\nexport default UpdateEvent\n","import React, { useState, useEffect } from 'react'\nimport UpdateEvent from './UpdateEvent'\nimport { Button, Grid, Box, Heading, Text } from 'grommet'\nimport { Link } from 'react-router-dom'\n\nconst DashBoardEvent = ({ event }) => {\n  const [show, setShow] = useState(false)\n  const [categoryName, setCategoryName] = useState('')\n\n  const removeEvent = () => {\n    fetch('/api/remove', {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ eventId: event.id })\n    })\n      .then(() => {\n        window.location.reload()\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  useEffect(() => {\n    async function getCategoryName () {\n      const response = await fetch(`/api/categoryId/${event.category_id}`)\n      const name = await response.json()\n      console.log(name)\n      setCategoryName(name)\n    }\n\n    getCategoryName()\n  }, [])\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n    <Box>\n      <UpdateEvent show={show} handleClose={handleClose} eventId={event.id} />\n\n      <Box\n        responsive='true'\n        direction='column'\n        align='center'\n        alignSelf='center'\n        background='#D3EBF9'\n        border={{ color: '#17539D', size: 'medium' }}\n        round='xsmall'\n        pad='medium'\n        margin={{ top: '10%' }}\n        width='90%'\n      >\n        <Grid\n          fill='true'\n          responsive='true'\n          rows={['xsmall', 'xxsmall', 'xsmall', 'auto']}\n          columns={['auto', 'auto', 'auto']}\n          areas={[\n            { name: 'category', start: [2, 0], end: [2, 0] },\n            { name: 'header', start: [0, 0], end: [1, 1] },\n            { name: 'time', start: [0, 1], end: [2, 1] },\n            { name: 'desc', start: [0, 2], end: [2, 2] },\n            { name: 'buttons', start: [0, 3], end: [2, 3] }\n          ]}\n        >\n          <Box responsive='true' gridArea='header'>\n            <Heading\n              alignSelf='start'\n              textAlign='start'\n              level='2'\n              responsive='true'\n              margin={{ top: 'small' }}\n            >\n              {event.title}\n            </Heading>\n          </Box>\n          <Box gridArea='category'>\n            <Heading textAlign='end' margin={{ vertical: 'xsmall' }} level='4'>\n              {categoryName.name}\n            </Heading>\n          </Box>\n          <Box gridArea='time'>\n            <Text size='large' textAlign='center' margin={{ vertical: 'auto' }}>\n              {new Date(event.date).toLocaleString()}\n            </Text>\n          </Box>\n          <Box gridArea='desc'>\n            <Text\n              size='medium'\n              margin={{ vertical: 'auto' }}\n              textAlign='center'\n            >\n              {event.description}\n            </Text>\n          </Box>\n          <Box\n            gridArea='buttons'\n            margin={{ top: 'medium' }}\n            alignContent='center'\n            align='center'\n            alignSelf='center'\n            flex='true'\n            direction='row'\n            justify='evenly'\n          >\n            <Box flex='true' align='center'>\n              <Button\n                responsive='true'\n                label='Update'\n                onClick={handleShow}\n                color='#6AB8E0'\n              />\n            </Box>\n            <Box flex='true' align='center'>\n              <Button\n                responsive='true'\n                label='Delete'\n                onClick={removeEvent}\n                color='#6AB8E0'\n              />\n            </Box>\n            <Box flex='true' align='center'>\n              <Link to={`/videoroom/${event.id}`}>\n                <Button\n                  size='medium'\n                  responsive='true'\n                  primary\n                  label='Join SmallTalk'\n                  color='#6AB8E0'\n                />\n              </Link>\n            </Box>\n          </Box>\n        </Grid>\n      </Box>\n    </Box>\n  )\n}\n\nexport default DashBoardEvent\n","import React, { useState, useEffect } from 'react'\nimport { Form, Modal } from 'react-bootstrap'\nimport { Button } from 'grommet'\n\nconst AddEvent = props => {\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [categoryData, setCategoryData] = useState(null)\n  const [categoryId, setCategoryId] = useState(1)\n  const [date, setDate] = useState(null)\n  const eventInfo = {\n    title: title,\n    description: description,\n    categoryId: categoryId,\n    date: date\n  }\n\n  const addEvent = e => {\n    e.preventDefault()\n    fetch('/api/add', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(eventInfo)\n    })\n      .then(() => window.location.reload())\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    async function getCategories () {\n      try {\n        const response = await fetch('/api/categories')\n        const data = await response.json()\n        setCategoryData(data)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n\n    getCategories()\n  }, [])\n\n  return (\n    <div>\n      <Modal show={props.show} onHide={props.handleClose}>\n        <Modal.Header closeButton>Create SmallTalk</Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId='titleForm'>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                onChange={e => setTitle(e.target.value)}\n                type='text'\n                placeholder='What is your SmallTalk about?'\n              />\n            </Form.Group>\n            <Form.Group controlId='descriptionForm'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                onChange={e => setDescription(e.target.value)}\n                as='textarea'\n                rows='3'\n                placeholder='Give a description of your SmallTalk!'\n              />\n            </Form.Group>\n\n            <Form.Group controlId='categoryOptions'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                onChange={e => setCategoryId(e.target.value)}\n                as='select'\n              >\n                {categoryData &&\n                  categoryData.map((category, i) => {\n                    if (i === 0) {\n                      return (\n                        <option\n                          key={category.id}\n                          value={category.id}\n                          selected='selected'\n                        >\n                          {category.name}\n                        </option>\n                      )\n                    }\n                    return (\n                      <option key={category.id} value={category.id}>\n                        {category.name}\n                      </option>\n                    )\n                  })}\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='dateForm'>\n              <Form.Label>Date</Form.Label>\n              <Form.Control\n                onChange={e => setDate(e.target.value)}\n                type='datetime-local'\n                rows='3'\n              />\n            </Form.Group>\n\n            <Button\n              onClick={addEvent}\n              color='#6AB8E0'\n              size='small'\n              primary\n              responsive='true'\n              type='submit'\n              label='Create SmallTalk'\n            />\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\n\nexport default AddEvent\n","import React, { useState, useEffect } from 'react'\nimport DashBoardEvent from './DashBoardEvent'\nimport AddEvent from './AddEvent'\nimport { Box, Button, Heading, Grid, Stack } from 'grommet'\nimport { Spinner } from 'react-bootstrap'\n\nfunction DashBoard() {\n  const [events, setEvent] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [show, setShow] = useState(false)\n\n  const handleShow = () => setShow(true)\n  const handleClose = () => setShow(false)\n\n  const getUsers = () => {\n    fetch('/api/users')\n      .then(response => {\n        console.log(response)\n        response.json()\n      })\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    setIsLoading(true)\n    fetch('/api/getEvents')\n      .then((res) => res.json())\n      .then((event) => {\n        const newEvents = [...event]\n        setEvent(newEvents)\n        setIsLoading(false)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n    getUsers()\n  }, [])\n\n  return (\n    <>\n      <Box responsive='true' className='dashboard'>\n        <Heading\n          margin={{ bottom: 'medium' }}\n          textAlign='center'\n          responsive='true'\n          color='#444444'\n        >\n          Your SmallTalk's\n        </Heading>\n        <Button\n          alignSelf='center'\n          primary\n          color='#6AB8E0'\n          onClick={handleShow}\n          label='Create SmallTalk'\n        />\n        <AddEvent id='addEvent' show={show} handleClose={handleClose} />\n      </Box>\n      {isLoading ? (\n        <Spinner className='loading' animation='border' role='status'>\n          <span className='sr-only'>Loading...</span>\n        </Spinner>\n      ) : (\n        <Stack>\n          {events.length === 0 ? (\n            <Heading level='3' id='emptyHeadingDash' textAlign='center'>\n              No SmallTalk's here! Try creating one!\n            </Heading>\n          ) : (\n            <></>\n          )}\n          <Grid\n            rows='medium'\n            columns={['auto', '1/2']}\n            gap='large'\n            responsive='true'\n            align='center'\n          >\n            {events &&\n              events.map((event) => {\n                return <DashBoardEvent key={event.id} event={event} />\n              })}\n          </Grid>\n        </Stack>\n      )}\n    </>\n  )\n}\nexport default DashBoard\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useParams } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport SimplePeer from 'simple-peer'\nimport styled from 'styled-components'\nimport { Stack, Box } from 'grommet'\n\nconst Video = styled.video`\n  margin-top: 3%;\n  width: 10%;\n`\nconst SpeakerVideo = styled.video`\n  width: 45%;\n  margin-top: 3%;\n`\n\nfunction VideoChat () {\n  const [stream, setStream] = useState()\n  const [isPartnerHere, setIsPartnerHere] = useState(null)\n  const { roomId } = useParams()\n\n  const userVideo = useRef()\n  const partnerVideo = useRef()\n  const socket = useRef()\n\n  useEffect(() => {\n    socket.current = io()\n    socket.current.emit('video-room', roomId)\n    let peer\n    socket.current.on('is-partner-here', isPartnerHere => {\n      console.log({ isPartnerHere })\n      setIsPartnerHere(isPartnerHere)\n\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then(stream => {\n          setStream(stream)\n          peer = new SimplePeer({\n            initiator: isPartnerHere,\n            trickle: false,\n            stream: stream\n          })\n          if (userVideo.current) {\n            console.log({ userVideo })\n            userVideo.current.srcObject = stream\n          }\n\n          peer.on('signal', data => {\n            console.log('Data was just sent', data)\n            socket.current.emit('signal', data)\n          })\n\n          peer.on('stream', partnerStream => {\n            setIsPartnerHere(true)\n            console.log({ partnerStream })\n            if (partnerVideo.current) {\n              partnerVideo.current.srcObject = partnerStream\n            }\n          })\n\n          socket.current.on('signal', data => {\n            console.log('I just received data', data)\n            peer.signal(data)\n            console.log({ peer })\n          })\n        })\n    })\n  }, [])\n\n  let UserVideo\n  if (stream) {\n    UserVideo = <Video playsInline muted ref={userVideo} autoPlay />\n  }\n\n  let PartnerVideo\n  if (isPartnerHere) {\n    PartnerVideo = <SpeakerVideo playsInline ref={partnerVideo} autoPlay />\n  } else {\n    PartnerVideo = <h2> Waiting for a partner...</h2>\n  }\n\n  return (\n    <Stack alignSelf='center'>\n      <Box align='center'>{PartnerVideo}</Box>\n      <Box margin={{ top: 'small', left: '27.5%' }}>{UserVideo}</Box>\n    </Stack>\n  )\n}\nexport default VideoChat\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport People from '../people.jpg'\nimport { User, Search, Chat } from 'grommet-icons'\nimport { Text, Heading } from 'grommet'\n\nconst Home = () => {\n  return (\n    <div className='homePage'>\n      <section className='top-row'>\n        <aside className='sideText'>\n          <Heading className='slogan'>\n            A new way to <span className='logo-text'>SMALLTALK</span>\n          </Heading>\n          <Text color='#304258' size='large' textAlign='start'>\n            SmallTalk is meant for just that: small talks! SmallTalk aims to\n            help ease the pressure that sometimes occurs when starting\n            conversations. With categories for starting points and events\n            created by users, there's tons of opportunities to join in!\n          </Text>\n        </aside>\n        <img\n          src={People}\n          className='people'\n          alt='image of interconnected circles with a group of people looking up at them symbolizing a network'\n        />\n      </section>\n\n      <h1 className='middle-row-title'>Join SmallTalk</h1>\n      <section className='middle-row'>\n        <div className='iconCard'>\n          <Link to='/register'>\n            <User className='userIcon' color='#3E92CC' size='xlarge' />\n          </Link>\n          <div className='cardContent'>\n            <Link to='/register'>\n              <b>Sign-Up</b>\n            </Link>\n            <p>Create a profile to join SmallTalks!</p>\n          </div>\n        </div>\n        <div className='iconCard'>\n          <Search className='searchIcon' color='#3E92CC' size='xlarge' />\n          <div className='cardContent'>\n            <b>Find events</b>\n            <p>Find events based on categories that interest you!</p>\n          </div>\n        </div>\n        <div className='iconCard'>\n          <Chat className='chatIcon' color='#3E92CC' size='xlarge' />\n          <div className='cardContent'>\n            <b>Chat it up!</b>\n            <p>\n              Once you have RSVP'd for an event, you are all set to start small\n              talking with others!\n            </p>\n          </div>\n        </div>\n      </section>\n\n      <section className='bottom-row'>\n        <p>\n          We hope that SmallTalk opens you up to all the one liners and awkward\n          silence reducers!\n        </p>\n      </section>\n      <footer>\n        <p>© SMALLTALK 2020</p>\n      </footer>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Box, Grid, Text, Heading, Button } from 'grommet'\nimport { Link } from 'react-router-dom'\n\nconst UpcomingEventsCard = ({ event }) => {\n  const removeRSVP = () => {\n    fetch('/api/rsvp/remove', {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ rsvpId: event.id })\n    })\n      .then(() => {\n        window.location.reload()\n      })\n      .catch(err => console.log(err))\n  }\n\n  console.log(event)\n\n  return (\n    <Box>\n      <Box\n        responsive='true'\n        direction='column'\n        align='center'\n        alignSelf='center'\n        background='#D3EBF9'\n        border={{ color: '#17539D', size: 'medium' }}\n        round='xsmall'\n        header='Your Events'\n        pad='medium'\n        margin={{ top: '10%' }}\n        width='90%'\n      >\n        <Grid\n          fill='true'\n          rows={['auto', 'xsmall', 'xxsmall', 'auto']}\n          columns={['auto', 'auto', 'auto']}\n          areas={[\n            { name: 'category', start: [2, 0], end: [2, 0] },\n            { name: 'header', start: [0, 0], end: [1, 1] },\n            { name: 'time', start: [0, 1], end: [2, 1] },\n            { name: 'desc', start: [0, 2], end: [2, 2] },\n            { name: 'buttons', start: [0, 3], end: [2, 3] }\n          ]}\n        >\n          <Box responsive='true' gridArea='header'>\n            <Heading\n              alignSelf='start'\n              textAlign='start'\n              level='2'\n              responsive='true'\n              margin={{ top: 'small' }}\n            >\n              {event.title}\n            </Heading>\n          </Box>\n          <Box gridArea='category'>\n            <Heading textAlign='end' margin={{ vertical: 'xsmall' }} level='4'>\n              {event.name}\n            </Heading>\n          </Box>\n          <Box gridArea='time'>\n            <Text size='large' textAlign='center' margin={{ vertical: 'auto' }}>\n              {new Date(event.date).toLocaleString()}\n            </Text>\n          </Box>\n          <Box gridArea='desc'>\n            <Text\n              size='medium'\n              margin={{ vertical: 'auto' }}\n              textAlign='center'\n            >\n              {event.description}\n            </Text>\n          </Box>\n          <Box\n            gridArea='buttons'\n            gap='medium'\n            margin={{ top: 'large', left: '24%' }}\n            direction='row'\n          >\n            <Button\n              size='medium'\n              responsive='true'\n              gap='small'\n              label='Un-RSVP'\n              onClick={removeRSVP}\n              color='#6AB8E0'\n            />\n            <Link to={`/videoroom/${event.event_id}`}>\n              <Button\n                size='medium'\n                responsive='true'\n                primary\n                gap='small'\n                label='Join SmallTalk'\n                color='#6AB8E0'\n              />\n            </Link>\n          </Box>\n        </Grid>\n      </Box>\n    </Box>\n  )\n}\n\nexport default UpcomingEventsCard\n","import React, { useState, useEffect } from 'react'\nimport { Heading, Box, Grid, Stack } from 'grommet'\nimport UpcomingEventsCard from './UpcomingEventsCard'\nimport { Spinner } from 'react-bootstrap'\n\nfunction UpcomingEvents () {\n  const [upcomingEvents, setUpComingEvents] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [err, setErr] = useState(null)\n\n  useEffect(() => {\n    function getRSVPEvents () {\n      setIsLoading(true)\n      fetch('/api/rsvp/user')\n        .then(res => res.json())\n        .then(event => {\n          const newEvents = [...event]\n          setUpComingEvents(newEvents)\n          setIsLoading(false)\n        })\n        .catch(err => {\n          console.log(err)\n          err = 'Sorry there was an error, please try again'\n          setErr(err)\n        })\n    }\n\n    getRSVPEvents()\n  }, [])\n\n  console.log(upcomingEvents)\n\n  return (\n    <>\n      <Box>\n        <Heading\n          className='upcomingEventHeader'\n          responsive='true'\n          color='#444444'\n        >\n          Your Upcoming SmallTalk's\n        </Heading>\n      </Box>\n\n      {isLoading ? (\n        <Spinner className='loading' animation='border' role='status'>\n          <span className='sr-only'>Loading...</span>\n        </Spinner>\n      ) : (\n        <Stack>\n          {upcomingEvents.length === 0 ? (\n            <Heading level='3' className='emptyHeading' textAlign='center'>\n              Hm...looks empty. Why not RSVP to an event?\n            </Heading>\n          ) : (\n            <></>\n          )}\n          <Grid\n            rows='medium'\n            columns={['auto', '1/2']}\n            gap='small'\n            responsive='true'\n            align='center'\n          >\n            {upcomingEvents &&\n              upcomingEvents.map(event => {\n                return <UpcomingEventsCard key={event.id} event={event} />\n              })}\n          </Grid>\n        </Stack>\n      )}\n    </>\n  )\n}\nexport default UpcomingEvents\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport CategoriesContextProvider from './contexts/CategoriesContextProvider'\nimport CategoryPage from './components/CategoryPage'\nimport CategoryList from './components/CategoryList'\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport DashBoard from './components/DashBoard'\nimport VideoChat from './components/VideoChat'\n\nimport Home from './components/Home'\nimport Logo from './navy-logo.png'\nimport './index.css'\nimport { Anchor, Box, Header, Nav, Image } from 'grommet'\nimport UpcomingEvents from './components/UpcomingEvents'\n\nfunction App () {\n  const logout = () => {\n    fetch('/api/logout').catch(err => console.log(err))\n  }\n  return (\n    <Router>\n      <Header background='light-1' pad='medium'>\n        <Box\n          direction='row'\n          responsive='true'\n          width='large'\n          align='center'\n          gap='small'\n        >\n          <Link to='/'>\n            <Image src={Logo} fit='contain' className='logo' />\n          </Link>\n          {document.cookie ? (\n            <>\n              <Anchor color='#304258' className='navLink' href='/dash'>\n                Your SmallTalk's\n              </Anchor>\n              <Anchor color='#304258' className='navLink' href='/categories'>\n                Categories\n              </Anchor>\n              <Anchor\n                color='#304258'\n                className='navLink'\n                href='/upcomingEvents'\n              >\n                Upcoming SmallTalk's\n              </Anchor>\n            </>\n          ) : (\n            <></>\n          )}\n        </Box>\n        <Nav direction='row'>\n          {document.cookie ? (\n            <>\n              <Anchor\n                href='/login'\n                color='#304258'\n                id='login'\n                onClick={() => logout()}\n              >\n                Logout\n              </Anchor>\n            </>\n          ) : (\n            <>\n              <Anchor color='#304258' className='navLink' href='/login'>\n                Login\n              </Anchor>\n              <Anchor color='#304258' className='navLink' href='/register'>\n                Register\n              </Anchor>\n            </>\n          )}\n        </Nav>\n      </Header>\n\n      <Switch>\n        <Route exact path='/'>\n          <Home />\n        </Route>\n        <Route path='/register'>\n          <Register />\n        </Route>\n        <Route path='/login'>\n          <Login />\n        </Route>\n\n        <Route path='/dash'>\n          <DashBoard />\n        </Route>\n\n        <Route path='/videoroom/:roomId'>\n          <VideoChat />\n        </Route>\n\n        <Route path='/categories/:categoryId'>\n          <CategoriesContextProvider>\n            <CategoryPage />\n          </CategoriesContextProvider>\n        </Route>\n\n        <Route path='/upcomingEvents'>\n          <UpcomingEvents />\n        </Route>\n\n        <Route path='/categories'>\n          <CategoryList />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Grommet } from 'grommet'\n\nconst theme = {\n  global: {\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px'\n    }\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Grommet theme={theme}>\n      <App />\n    </Grommet>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}